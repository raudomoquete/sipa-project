// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiPA.API.Data;

namespace SiPA.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220304233431_CompleteDB")]
    partial class CompleteDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiPA.API.Data.Entities.Christening", b =>
                {
                    b.Property<int>("ChristeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CeremonialCelebrant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChristeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("FatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoMotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodMotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChristeningId");

                    b.HasIndex("ChurchId");

                    b.ToTable("Christenings");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Church", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Churches");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Confirmation", b =>
                {
                    b.Property<int>("ConfirmationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CeremonialCelebrant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoMotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodMotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConfirmationId");

                    b.HasIndex("ChurchId");

                    b.ToTable("Confirmations");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.FirstCommunion", b =>
                {
                    b.Property<int>("FirstCommunionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CeremonialCelebrant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("FatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstCommunionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirstCommunionId");

                    b.HasIndex("ChurchId");

                    b.ToTable("FirstCommunions");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParishionerId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParishionerId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Parishioner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChristeningId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<int>("ConfirmationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstCommunionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeddingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChristeningId")
                        .IsUnique();

                    b.HasIndex("ChurchId");

                    b.HasIndex("ConfirmationId")
                        .IsUnique();

                    b.HasIndex("FirstCommunionId")
                        .IsUnique();

                    b.HasIndex("WeddingId");

                    b.ToTable("Parishioners");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChurchId");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Wedding", b =>
                {
                    b.Property<int>("WeddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CeremonialCelebrant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchId")
                        .HasColumnType("int");

                    b.Property<string>("FatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoMotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodMotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WeddingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Witness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WitnessIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeddingId");

                    b.HasIndex("ChurchId");

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Christening", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Church", "Church")
                        .WithMany("Christenings")
                        .HasForeignKey("ChurchId");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Confirmation", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Church", "Church")
                        .WithMany("Confirmations")
                        .HasForeignKey("ChurchId");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.FirstCommunion", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Church", "Church")
                        .WithMany("FirstCommunions")
                        .HasForeignKey("ChurchId");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.History", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Parishioner", "Parishioner")
                        .WithMany("Histories")
                        .HasForeignKey("ParishionerId");

                    b.HasOne("SiPA.API.Data.Entities.RequestType", "RequestType")
                        .WithMany("Histories")
                        .HasForeignKey("RequestTypeId");

                    b.Navigation("Parishioner");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Parishioner", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Christening", "Christening")
                        .WithOne("Parishioner")
                        .HasForeignKey("SiPA.API.Data.Entities.Parishioner", "ChristeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiPA.API.Data.Entities.Church", "Church")
                        .WithMany("Parishioners")
                        .HasForeignKey("ChurchId");

                    b.HasOne("SiPA.API.Data.Entities.Confirmation", "Confirmation")
                        .WithOne("Parishioner")
                        .HasForeignKey("SiPA.API.Data.Entities.Parishioner", "ConfirmationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiPA.API.Data.Entities.FirstCommunion", "FirstCommunion")
                        .WithOne("Parishioner")
                        .HasForeignKey("SiPA.API.Data.Entities.Parishioner", "FirstCommunionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiPA.API.Data.Entities.Wedding", "Wedding")
                        .WithMany("Parishioners")
                        .HasForeignKey("WeddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Christening");

                    b.Navigation("Church");

                    b.Navigation("Confirmation");

                    b.Navigation("FirstCommunion");

                    b.Navigation("Wedding");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.RequestType", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Church", null)
                        .WithMany("RequestTypes")
                        .HasForeignKey("ChurchId");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Wedding", b =>
                {
                    b.HasOne("SiPA.API.Data.Entities.Church", "Church")
                        .WithMany("Weddings")
                        .HasForeignKey("ChurchId");

                    b.Navigation("Church");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Christening", b =>
                {
                    b.Navigation("Parishioner");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Church", b =>
                {
                    b.Navigation("Christenings");

                    b.Navigation("Confirmations");

                    b.Navigation("FirstCommunions");

                    b.Navigation("Parishioners");

                    b.Navigation("RequestTypes");

                    b.Navigation("Weddings");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Confirmation", b =>
                {
                    b.Navigation("Parishioner");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.FirstCommunion", b =>
                {
                    b.Navigation("Parishioner");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Parishioner", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.RequestType", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("SiPA.API.Data.Entities.Wedding", b =>
                {
                    b.Navigation("Parishioners");
                });
#pragma warning restore 612, 618
        }
    }
}
